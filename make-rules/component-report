#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2012, 2021, Oracle and/or its affiliates.
#

ifneq ($(NO_PKG_REPORT),)
# If NO_PKG_REPORT is set, rest of this file is skipped via this condition
component-report:
else
PKG_REPORTS=$(CANONICAL_MANIFESTS:%.p5m=$(BUILD_DIR)/%.pkg-report)
HG_BRANCH=$(shell hg branch)
HGWEB_BASE_URL = http://userland.us.oracle.com/hg/file/$(HG_BRANCH)/
ARIA_BASE_URL = http://people.us.oracle.com/pls/oracle/find_person?p_string=
ARC_BASE_URL = http://psarc.us.oracle.com/
BUGDB_URL = http://userland.us.oracle.com/bugdb?cat-subcat=

REPORT_TRANSFORMS = $(WS_TOP)/transforms/report
CDIR=$(COMPONENT_DIR:$(WS_TOP)/%=%)

RE_RM_LINE=$(shell /usr/gnu/bin/grep --max-count=1 -E "^$(CDIR:components/%=%)\|" $(COMPONENT_REPORT_RE_RM_LIST))
# The line has a form
# unrar|group.name@oracle.com|engineer.name@oracle.com|resp. team
RESPONSIBLE_ENGINEER=$(if $(RE_RM_LINE),$(word 2,$(subst |, ,$(RE_RM_LINE))),Unknown)
RESPONSIBLE_MANAGER=$(if $(RE_RM_LINE),$(word 3,$(subst |, ,$(RE_RM_LINE))),Unknown)
TEAM=$(if $(RE_RM_LINE),$(word 4,$(subst |, ,$(RE_RM_LINE))),Unknown)

# Add all the COMPONENT_BAID* Makefile macros together for further processing below.
$(foreach macro, $(filter COMPONENT_BAID%, $(.VARIABLES)), \
    $(eval ALL_BAIDS += $$($(macro))) \
)

component-report:	$(BUILD_DIR)/component-report

$(BUILD_DIR)/component-report:	$(BUILD_DIR)/package-info
	@echo "<tr>" >$@
	@echo "<td><a href='$(COMPONENT_PROJECT_URL)'>$(COMPONENT_NAME)</a></td>" >>$@
	@echo "<td><a href='$(COMPONENT_ARCHIVE_URL)'>$(COMPONENT_VERSION)</a></td>" >>$@
	@echo "<td><a href='$(HGWEB_BASE_URL)$(CDIR)'>$(CDIR)</a></td>" >>$@
	@echo "<td>" >>$@ ; for pkg in $(PACKAGE) ; do \
             if [[ $$pkg == *-@* ]]; then \
	     	( : having the version empty as blah-@ means that the version was ) ; \
	     	( : not correctly extracted and is probably parametric. In such case ) ; \
	     	( : we will look at the published repo and read all matching ) ; \
	     	( : packages. Skipping obsolete and renamed ones. ) ; \
	     	MASK="$${pkg%-@*}" ; \
	     	VER="$${pkg##*@}" ; \
		pkgrepo list -H -s $(COMPONENT_REPORT_REPO) "$$MASK" "$$MASK"-* | \
		   while read publisher name flags rest; do \
	     	      ( : pkgrepo list is hard to  parsea so $$flags ) ; \
	     	      ( : contain either flags or package version ) ; \
		      if [[ $$flags != [or] ]]; then \
		         echo "$$name@$$VER<br>" >>$@ ; \
		      fi ; \
		   done ; \
             else \
	     	( : package version is known, just print it ) ; \
             	echo "$$pkg<br>" >>$@ ; \
             fi; \
	 done ; echo "</td>" >>$@
	@echo "<td>" >>$@ ; for arc in $(COMP_ARC_CASE) ; do \
             echo "<a href='$(ARC_BASE_URL)$$arc'>$$arc</a><br>" >>$@ ; \
	 done ; echo "</td>" >>$@
	@echo "<td>" >>$@ ; for license in $(LICENSE) ; do \
	     echo "$$license<br>" >>$@ ; \
	 done ; echo "</td>" >>$@
	@echo "<td>" >>$@ ; for baid in $(ALL_BAIDS) ; do \
	     echo "<a href='https://pls.appoci.oraclecorp.com/tplta/faces/ThirdPartyHome?wid=$$baid'>$${baid}</a><br>" >>$@ ; \
	 done ; echo "</td>" >>$@
	@echo "<td>" >>$@ ; for bugdb in $(COMPONENT_BUGDB) ; do \
	     echo "<a href='$(BUGDB_URL)$$bugdb'>$$bugdb</a><br>" >>$@ ; \
	 done ; echo "</td>" >>$@
	@echo "<td><a href='$(ARIA_BASE_URL)$(RESPONSIBLE_ENGINEER)'>$(RESPONSIBLE_ENGINEER)</a></td>" >>$@
	@echo "<td><a href='$(ARIA_BASE_URL)$(RESPONSIBLE_MANAGER)'>$(RESPONSIBLE_MANAGER)</a></td>" >>$@
	@echo "<td>$(TEAM)</td>" >>$@
	@echo "</tr>" >>$@

$(BUILD_DIR)/package-info:	$(PKG_REPORTS)
	@cat $(PKG_REPORTS) | sort -u >$@

$(BUILD_DIR)/component-info:	$(PKG_REPORTS)
	@echo "COMPONENT_NAME=\"$(COMPONENT_NAME)\"" >$@
	@echo "COMPONENT_VERSION=\"$(COMPONENT_VERSION)\"" >>$@
	@echo "COMPONENT_PROJECT_URL=\"$(COMPONENT_PROJECT_URL)\"" >>$@
	@echo "COMPONENT_ARCHIVE_URL=\"$(COMPONENT_ARCHIVE_URL)\"" >>$@
	@echo "COMPONENT_DIR=\"$(CDIR)\"" >>$@
	@echo "COMPONENT_BAID=\"$(ALL_BAIDS)\"" >>$@
	@echo "COMPONENT_BUGDB=\"$(COMPONENT_BUGDB)\"" >>$@
	@echo "RESPONSIBLE_ENGINEER=\"$(RESPONSIBLE_ENGINEER)\"" >>$@
	@echo "RESPONSIBLE_MANAGER=\"$(RESPONSIBLE_MANAGER)\"" >>$@
	@echo "TEAM=\"$(TEAM)\"" >>$@

$(BUILD_DIR)/%.pkg-report:	%.p5m $(BUILD_DIR)
	$(PKG_REPORT_ADDITIONAL_SETUP)
	@$(PKGMOGRIFY) $(PKG_OPTIONS) -P $@ $< \
		$(REPORT_TRANSFORMS) >/dev/null

include $(BUILD_DIR)/package-info

endif
