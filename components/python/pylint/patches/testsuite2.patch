From: https://github.com/PyCQA/pylint/pull/7367

From 1eb8a9b0ae1fbd3f67d765eaf47247fbcc2e04db Mon Sep 17 00:00:00 2001
From: Ben Greiner <code@bnavigator.de>
Date: Sat, 27 Aug 2022 14:58:25 +0200
Subject: [PATCH] nest _test_environ_pythonpath independent of outside
 PYTHONPATH

Closes #7366
---
 tests/testutils/test_testutils_utils.py | 42 +++++++++++++++----------
 1 file changed, 25 insertions(+), 17 deletions(-)

diff --git a/tests/testutils/test_testutils_utils.py b/tests/testutils/test_testutils_utils.py
index 79f4e2a81c..b521e25c4c 100644
--- a/tests/testutils/test_testutils_utils.py
+++ b/tests/testutils/test_testutils_utils.py
@@ -6,6 +6,8 @@
 import sys
 from pathlib import Path
 
+import pytest
+
 from pylint.testutils.utils import _test_cwd, _test_environ_pythonpath, _test_sys_path
 
 
@@ -50,22 +52,28 @@ def test__test_cwd(tmp_path: Path) -> None:
     assert os.getcwd() == cwd
 
 
-def test__test_environ_pythonpath_no_arg() -> None:
-    python_path = os.environ.get("PYTHONPATH")
-    with _test_environ_pythonpath():
-        assert os.environ.get("PYTHONPATH") == python_path
-        new_pythonpath = "./whatever/:"
-        os.environ["PYTHONPATH"] = new_pythonpath
-        assert os.environ.get("PYTHONPATH") == new_pythonpath
-    assert os.environ.get("PYTHONPATH") == python_path
+@pytest.mark.parametrize("old_pythonpath", ["./oldpath/:", None])
+def test__test_environ_pythonpath_no_arg(old_pythonpath: str) -> None:
+    real_pythonpath = os.environ.get("PYTHONPATH")
+    with _test_environ_pythonpath(old_pythonpath):
+        with _test_environ_pythonpath():
+            assert os.environ.get("PYTHONPATH") is None
+            new_pythonpath = "./whatever/:"
+            os.environ["PYTHONPATH"] = new_pythonpath
+            assert os.environ.get("PYTHONPATH") == new_pythonpath
+        assert os.environ.get("PYTHONPATH") == old_pythonpath
+    assert os.environ.get("PYTHONPATH") == real_pythonpath
 
 
-def test__test_environ_pythonpath() -> None:
-    python_path = os.environ.get("PYTHONPATH")
-    new_pythonpath = "./whatever/:"
-    with _test_environ_pythonpath(new_pythonpath):
-        assert os.environ.get("PYTHONPATH") == new_pythonpath
-        newer_pythonpath = "./something_else/:"
-        os.environ["PYTHONPATH"] = newer_pythonpath
-        assert os.environ.get("PYTHONPATH") == newer_pythonpath
-    assert os.environ.get("PYTHONPATH") == python_path
+@pytest.mark.parametrize("old_pythonpath", ["./oldpath/:", None])
+def test__test_environ_pythonpath(old_pythonpath: str) -> None:
+    real_pythonpath = os.environ.get("PYTHONPATH")
+    with _test_environ_pythonpath(old_pythonpath):
+        new_pythonpath = "./whatever/:"
+        with _test_environ_pythonpath(new_pythonpath):
+            assert os.environ.get("PYTHONPATH") == new_pythonpath
+            newer_pythonpath = "./something_else/:"
+            os.environ["PYTHONPATH"] = newer_pythonpath
+            assert os.environ.get("PYTHONPATH") == newer_pythonpath
+        assert os.environ.get("PYTHONPATH") == old_pythonpath
+    assert os.environ.get("PYTHONPATH") == real_pythonpath
