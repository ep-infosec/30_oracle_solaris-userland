Solaris doesn't have pretend python package, hence all tests
depending on it are disabled.

test_load_ecdsa_no_named_curve doesn't work as it makes an incorrect
assumption about our comparatively new version of OpenSSL

https://github.com/pyca/cryptography/issues/4998

--- cryptography-3.1.1/tests/test_utils.py
+++ cryptography-3.1.1/tests/test_utils.py
@@ -8,8 +8,6 @@ import binascii
 import os
 import textwrap
 
-import pretend
-
 import pytest
 
 import cryptography
@@ -39,6 +37,7 @@ from .utils import (
 )
 
 
+@pytest.mark.skip(reason="We don't have pretend on Solaris")
 def test_check_backend_support_skip():
     supported = pretend.stub(
         kwargs={"only_if": lambda backend: False, "skip_message": "Nope"}
@@ -50,6 +49,7 @@ def test_check_backend_support_skip():
     assert exc_info.value.args[0] == "Nope (True)"
 
 
+@pytest.mark.skip(reason="We don't have pretend on Solaris")
 def test_check_backend_support_no_skip():
     supported = pretend.stub(
         kwargs={"only_if": lambda backend: True, "skip_message": "Nope"}
--- cryptography-3.1.1/tests/x509/test_x509_ext.py
+++ cryptography-3.1.1/tests/x509/test_x509_ext.py
@@ -9,8 +9,6 @@ import datetime
 import ipaddress
 import os
 
-import pretend
-
 import pytest
 
 import six
@@ -1578,6 +1576,7 @@ class TestSubjectKeyIdentifierExtension(
         ski = x509.SubjectKeyIdentifier.from_public_key(cert.public_key())
         assert ext.value == ski
 
+    @pytest.mark.skip(reason="We don't have pretend on Solaris")
     @pytest.mark.requires_backend_interface(interface=DSABackend)
     @pytest.mark.requires_backend_interface(interface=X509Backend)
     def test_invalid_bit_string_padding_from_public_key(self, backend):
@@ -1594,6 +1593,7 @@ class TestSubjectKeyIdentifierExtension(
         with pytest.raises(ValueError):
             _key_identifier_from_public_key(pretend_key)
 
+    @pytest.mark.skip(reason="We don't have pretend on Solaris")
     @pytest.mark.requires_backend_interface(interface=DSABackend)
     @pytest.mark.requires_backend_interface(interface=X509Backend)
     def test_no_optional_params_allowed_from_public_key(self, backend):
--- cryptography-2.5/tests/x509/test_x509.py
+++ cryptography-2.5/tests/x509/test_x509.py
@@ -4625,6 +4625,7 @@ class TestECDSACertificate(object):
             ec.ECDSA(cert.signature_hash_algorithm),
         )
 
+    @pytest.mark.skip("Doesn't work with our version of OpenSSL")
     def test_load_ecdsa_no_named_curve(self, backend):
         _skip_curve_unsupported(backend, ec.SECP256R1())
         cert = _load_cert(
