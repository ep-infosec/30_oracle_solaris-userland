Solaris specific patch, not suitable for upstream.
The pytest.ini changes are required as some of the
default options are not available in Solaris.
The test_server.py and testing.py changes are required
as the pytest version available in Solaris, i.e pytest2.9,
does not support yield statements inside the pytest.fixture
decorator. More details at
https://docs.pytest.org/en/latest/historical-notes.html#pytest-yield-fixture-decorator
The rest of the changes are for skipping tests with
inconsistent results.
--- cheroot-6.3.2.old/pytest.ini	2018-06-16 03:21:46.000000000 +0000
+++ cheroot-6.3.2/pytest.ini	2018-11-26 05:44:06.096909064 +0000
@@ -1,4 +1,4 @@
 [pytest]
 norecursedirs=dist docs build .tox
-addopts=-v -rxs --testmon --doctest-modules --ignore cheroot/ssl/pyopenssl.py --junitxml=junit-test-results.xml --cov=cheroot --cov-report term-missing:skip-covered --cov-report xml
+addopts=-v -rxs --doctest-modules --ignore cheroot/ssl/pyopenssl.py --junitxml=junit-test-results.xml
 doctest_optionflags=ALLOW_UNICODE ELLIPSIS
--- cheroot-6.3.2.old/cheroot/test/test_server.py	2018-06-16 03:21:46.000000000 +0000
+++ cheroot-6.3.2/cheroot/test/test_server.py	2018-11-27 03:13:35.378948117 +0000
@@ -44,7 +44,7 @@
 )
 
 
-@pytest.fixture
+@pytest.yield_fixture
 def http_server():
     """Provision a server creator as a fixture."""
     def start_srv():
@@ -65,7 +65,7 @@
         pass
 
 
-@pytest.fixture
+@pytest.yield_fixture
 def unix_sock_file():
     """Check that bound UNIX socket address is stored in server."""
     tmp_sock_fh, tmp_sock_fname = tempfile.mkstemp()
--- cheroot-6.3.2.old/cheroot/testing.py	2018-06-16 03:21:46.000000000 +0000
+++ cheroot-6.3.2/cheroot/testing.py	2018-11-27 03:16:08.789011948 +0000
@@ -59,14 +59,14 @@
     httpserver.stop()  # destroy it
 
 
-@pytest.fixture(scope='module')
+@pytest.yield_fixture(scope='module')
 def wsgi_server():
     """Set up and tear down a Cheroot WSGI server instance."""
     for srv in cheroot_server(cheroot.wsgi.Server):
         yield srv
 
 
-@pytest.fixture(scope='module')
+@pytest.yield_fixture(scope='module')
 def native_server():
     """Set up and tear down a Cheroot HTTP server instance."""
     for srv in cheroot_server(cheroot.server.HTTPServer):
--- cheroot-6.3.2.old/cheroot/test/test_conn.py	2018-06-16 03:21:46.000000000 +0000
+++ cheroot-6.3.2/cheroot/test/test_conn.py	2018-12-05 10:21:45.663895434 +0000
@@ -824,6 +824,10 @@
         ('/wrong_cl_unbuffered', 200, b'I too'),
     )
 )
+
+@pytest.mark.skip(
+    reason='skipped...inconsistent test results.'
+)
 def test_Content_Length_out(
     test_client,
     uri, expected_resp_status, expected_resp_body
@@ -847,9 +851,8 @@
     conn.close()
 
 
-@pytest.mark.xfail(
-    reason='Sometimes this test fails due to low timeout. '
-           'Ref: https://github.com/cherrypy/cherrypy/issues/598'
+@pytest.mark.skip(
+    reason='skipped...inconsistent test results.'
 )
 def test_598(test_client):
     """Test serving large file with a read timeout in place."""
