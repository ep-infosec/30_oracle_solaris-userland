* Solaris doesn't have flaky and pretend python packages available.

* Several tests fail with OpenSSL 3 as their assumptions are incorrect. This is
  an issue known to upstream:
    https://github.com/pyca/pyopenssl/issues/1024
    https://github.com/pyca/pyopenssl/issues/1072

* Since blowfish is part of the legacy provider in OpenSSL 3, it's changed
  to DES-EDE3-CBC available in the default one. This wasn't reported upstream
  because standard cryptography doesn't work without the legacy provider, and
  thus this shouldn't be an issue (but our patched variant doesn't need it).

* test_set_default_verify_paths tries to connect to an external server, which
  does not work within OWAN, even if proxy variables are set.

--- pyOpenSSL-22.0.0/tests/test_crypto.py
+++ pyOpenSSL-22.0.0/tests/test_crypto.py
@@ -19,8 +19,6 @@ from cryptography.hazmat.backends.openss
 from cryptography.hazmat.primitives import serialization
 from cryptography.hazmat.primitives.asymmetric import rsa
 
-import flaky
-
 from OpenSSL.crypto import TYPE_RSA, TYPE_DSA, Error, PKey
 from OpenSSL.crypto import X509, X509Name
 from OpenSSL.crypto import (
@@ -61,7 +59,7 @@ def normalize_privatekey_pem(pem):
     return dump_privatekey(FILETYPE_PEM, load_privatekey(FILETYPE_PEM, pem))
 
 
-GOOD_CIPHER = "blowfish"
+GOOD_CIPHER = "DES-EDE3-CBC"
 BAD_CIPHER = "zippers"
 
 GOOD_DIGEST = "SHA256"
@@ -1859,7 +1857,7 @@ class TestX509(_PKeyInteractionTestsMixi
         with pytest.raises(TypeError):
             cert.gmtime_adj_notBefore(None)
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_gmtime_adj_notBefore(self):
         """
         `X509.gmtime_adj_notBefore` changes the not-before timestamp to be the
@@ -1885,7 +1883,7 @@ class TestX509(_PKeyInteractionTestsMixi
         with pytest.raises(TypeError):
             cert.gmtime_adj_notAfter(None)
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_gmtime_adj_notAfter(self):
         """
         `X509.gmtime_adj_notAfter` changes the not-after timestamp
@@ -2022,6 +2020,7 @@ class TestX509(_PKeyInteractionTestsMixi
         with pytest.raises(TypeError):
             cert.get_extension("hello")
 
+    @pytest.mark.skip(reason="Test fails with OpenSSL 3")
     def test_nullbyte_subjectAltName(self):
         """
         The fields of a `subjectAltName` extension on an X509 may contain NUL
@@ -4041,6 +4040,7 @@ class TestX509StoreContext(object):
         store_ctx = X509StoreContext(store, self.root_cert)
         assert store_ctx.verify_certificate() is None
 
+    @pytest.mark.skip(reason="Test fails with OpenSSL 3")
     def test_untrusted_self_signed(self):
         """
         `verify_certificate` raises error when a self-signed certificate is
--- pyOpenSSL-22.0.0/tests/test_ssl.py
+++ pyOpenSSL-22.0.0/tests/test_ssl.py
@@ -33,12 +33,8 @@ from os.path import join
 from weakref import ref
 from warnings import simplefilter
 
-import flaky
-
 import pytest
 
-from pretend import raiser
-
 from cryptography import x509
 from cryptography.hazmat.backends import default_backend
 from cryptography.hazmat.primitives import hashes
@@ -519,7 +515,7 @@ class TestContext(object):
         with pytest.raises(TypeError):
             context.set_cipher_list(object())
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_set_cipher_list_no_cipher_match(self, context):
         """
         `Context.set_cipher_list` raises `OpenSSL.SSL.Error` with a
@@ -568,6 +564,7 @@ class TestContext(object):
         """
         context.set_session_id(b"abc")
 
+    @pytest.mark.skip(reason="Test fails with OpenSSL 3")
     def test_set_session_id_fail(self, context):
         """
         `Context.set_session_id` errors are propagated.
@@ -885,7 +882,7 @@ class TestContext(object):
         """
         key = PKey()
         key.generate_key(TYPE_RSA, 1024)
-        pem = dump_privatekey(FILETYPE_PEM, key, "blowfish", passphrase)
+        pem = dump_privatekey(FILETYPE_PEM, key, "DES-EDE3-CBC", passphrase)
         with open(tmpfile, "w") as fObj:
             fObj.write(pem.decode("ascii"))
         return tmpfile
@@ -1254,6 +1251,7 @@ class TestContext(object):
         assert context._check_env_vars_set(dir_var, file_var) is True
         assert context._check_env_vars_set(dir_var, file_var) is True
 
+    @pytest.mark.skip(reason="We don't have pretend python package in Solaris")
     def test_verify_no_fallback_if_env_vars_set(self, monkeypatch):
         """
         Test that we don't use the fallback path if env vars are set.
@@ -1282,6 +1280,9 @@ class TestContext(object):
         reason="set_default_verify_paths appears not to work on Windows.  "
         "See LP#404343 and LP#404344.",
     )
+    @pytest.mark.skip(
+        reason="This test doesn't work within OWAN, even with proxy set"
+    )
     def test_set_default_verify_paths(self):
         """
         `Context.set_default_verify_paths` causes the platform-specific CA
@@ -3670,6 +3671,7 @@ class TestMemoryBIO(object):
         # handshake failure.
         assert type(err.value) in [Error, SysCallError]
 
+    @pytest.mark.skip(reason="Test fails with OpenSSL 3")
     def test_unexpected_EOF(self):
         """
         If the connection is lost before an orderly SSL shutdown occurs,
