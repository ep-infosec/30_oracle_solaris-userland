pause_test.py doesn't word correctly on Solaris and should be investigated more.

setup_test.py needs to recompile testing .so files for 32 and 64bit versions.
Also, file paths are different because our test cwd is different.

ssh_key_cb_test.py also doesn't work as expected probably because of our proxy
setting. Removal of this test fixes the problem.

--- pycurl-7.44.1/tests/pause_test.py
+++ pycurl-7.44.1/tests/pause_test.py
@@ -21,9 +21,11 @@ class PauseTest(unittest.TestCase):
     def tearDown(self):
         self.curl.close()
 
+    @unittest.skip("Test doesn't work correcly on Solaris")
     def test_pause_via_call(self):
         self.check_pause(True)
 
+    @unittest.skip("Test doesn't work correcly on Solaris")
     def test_pause_via_return(self):
         self.check_pause(False)
 
--- pycurl-7.44.1/tests/fake-curl/libcurl/Makefile
+++ pycurl-7.44.1/tests/fake-curl/libcurl/Makefile
@@ -11,9 +11,6 @@ clean:
 
 .SUFFIXES: .c .so
 
-CC = `curl-config --cc`
-CFLAGS += `curl-config --cflags`
-
 .c.so:
 	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -shared -fPIC \
 		-Wl,-soname,$@ -o $@ $<
--- pycurl-7.44.1/tests/setup_test.py
+++ pycurl-7.44.1/tests/setup_test.py
@@ -162,7 +162,7 @@ not been able to determine which SSL bac
     @using_curl_config('curl-config-ssl-feature-only')
     def test_libcurl_ssl_openssl(self):
         config = pycurl_setup.ExtensionConfiguration(['',
-            '--libcurl-dll=tests/fake-curl/libcurl/with_openssl.so'])
+            '--libcurl-dll=fake-curl/libcurl/with_openssl.so'])
         # openssl should be detected
         assert 'HAVE_CURL_SSL' in config.define_symbols
         assert 'HAVE_CURL_OPENSSL' in config.define_symbols
@@ -175,7 +175,7 @@ not been able to determine which SSL bac
     @using_curl_config('curl-config-ssl-feature-only')
     def test_libcurl_ssl_gnutls(self):
         config = pycurl_setup.ExtensionConfiguration(['',
-            '--libcurl-dll=tests/fake-curl/libcurl/with_gnutls.so'])
+            '--libcurl-dll=fake-curl/libcurl/with_gnutls.so'])
         # gnutls should be detected
         assert 'HAVE_CURL_SSL' in config.define_symbols
         assert 'HAVE_CURL_GNUTLS' in config.define_symbols
@@ -188,7 +188,7 @@ not been able to determine which SSL bac
     @using_curl_config('curl-config-ssl-feature-only')
     def test_libcurl_ssl_nss(self):
         config = pycurl_setup.ExtensionConfiguration(['',
-            '--libcurl-dll=tests/fake-curl/libcurl/with_nss.so'])
+            '--libcurl-dll=fake-curl/libcurl/with_nss.so'])
         # nss should be detected
         assert 'HAVE_CURL_SSL' in config.define_symbols
         assert 'HAVE_CURL_NSS' in config.define_symbols
@@ -201,7 +201,7 @@ not been able to determine which SSL bac
     @using_curl_config('curl-config-empty')
     def test_libcurl_ssl_unrecognized(self):
         config = pycurl_setup.ExtensionConfiguration(['',
-            '--libcurl-dll=tests/fake-curl/libcurl/with_unknown_ssl.so'])
+            '--libcurl-dll=fake-curl/libcurl/with_unknown_ssl.so'])
         assert 'HAVE_CURL_SSL' not in config.define_symbols
         assert 'HAVE_CURL_OPENSSL' not in config.define_symbols
         assert 'HAVE_CURL_GNUTLS' not in config.define_symbols
--- pycurl-7.44.1/tests/ssh_key_cb_test.py
+++ pycurl-7.44.1/tests/ssh_key_cb_test.py
@@ -27,6 +27,7 @@ class SshKeyCbTest(unittest.TestCase):
     # curl compiled with libssh doesn't support
     # CURLOPT_SSH_KNOWNHOSTS and CURLOPT_SSH_KEYFUNCTION
     @util.guard_unknown_libcurl_option
+    @unittest.skip("Test doesn't work correcly on Solaris")
     def test_keyfunction(self):
         # with keyfunction returning ok
 
@@ -58,6 +59,7 @@ class SshKeyCbTest(unittest.TestCase):
 
     @util.min_libcurl(7, 19, 6)
     @util.guard_unknown_libcurl_option
+    @unittest.skip("Test doesn't work correcly on Solaris")
     def test_keyfunction_bogus_return(self):
         def keyfunction(known_key, found_key, match):
             return 'bogus'
