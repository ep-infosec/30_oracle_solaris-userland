#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2020, 2021, Oracle and/or its affiliates.
#
#
<transform file path=usr.*/man/.+ -> default mangler.man.stability volatile>
set name=pkg.fmri \
    value=pkg:/library/perl-5/test-deep-$(PLV)@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)
set name=pkg.summary \
    value="Test::Deep - Extremely flexible deep structure comparison"
set name=pkg.description \
    value="Test::Deep gives you very flexible ways to check that the result you got is the result you were expecting. At its simplest it compares two structures by going through each level, ensuring that the values match, that arrays and hashes have the same elements and that references are blessed into the correct class. It also handles circular data structures without getting caught in an infinite loop."
set name=com.oracle.info.baid value=$(COMPONENT_BAID)
set name=com.oracle.info.description value="the Test::Deep Perl module"
set name=info.classification \
    value=org.opensolaris.category.2008:Development/Perl
set name=info.source-url value=$(COMPONENT_ARCHIVE_URL)
set name=info.upstream-url value=$(COMPONENT_PROJECT_URL)
set name=org.opensolaris.arc-caseid value=PSARC/2019/101
set name=org.opensolaris.consolidation value=$(CONSOLIDATION)
file path=usr/perl5/$(PERLVER)/man/man3/Test::Deep.3
file path=usr/perl5/$(PERLVER)/man/man3/Test::Deep::NoTest.3
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/All.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Any.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Array.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ArrayEach.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ArrayElementsOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ArrayLength.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ArrayLengthOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Blessed.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Boolean.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Cache.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Cache/Simple.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Class.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Cmp.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Code.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Hash.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/HashEach.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/HashElements.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/HashKeys.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/HashKeysOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Ignore.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Isa.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ListMethods.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/MM.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Methods.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/NoTest.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/None.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Number.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Obj.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Ref.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RefType.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Regexp.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RegexpMatches.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RegexpOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RegexpRef.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RegexpRefOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/RegexpVersion.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ScalarRef.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/ScalarRefOnly.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Set.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Shallow.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/Stack.pm
file path=usr/perl5/vendor_perl/$(PERLVER)/Test/Deep/String.pm
license Artistic license=Artistic

# force a dependency on the Perl runtime
depend type=require fmri=__TBD pkg.debug.depend.file=perl \
    pkg.debug.depend.path=usr/perl5/$(PERLVER)/bin
