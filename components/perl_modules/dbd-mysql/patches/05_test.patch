#
# The connect string can contain both information about user/password to login
# to mysql and database name to connect. This test tries to verify that one can
# create a DB even without the database name. But the connect string for all
# tests already contains the database name. But it also strips the socket path
# we are supplying to the tests (so that multiple tests can be executed in
# parallel not fighting over one socket name).
#
# In other words $test_dsn goes from
# DBI:mysql:test;mysql_socket=//tmp/dbd-mysql-test.4.mZ3d/socket
# to
# DBI:mysql:
#
# I am adding here again the socket information (similarly to how it is added
# in mysql.mtest)
#
--- DBD-mysql-4.048/t/05dbcreate.t
+++ DBD-mysql-4.048/t/05dbcreate.t
@@ -5,12 +5,13 @@ use Test::More ;
 use DBI;
 $|= 1;
 
-use vars qw($test_user $test_password $test_db $test_dsn);
+use vars qw($test_user $test_password $test_db $test_dsn $test_socket);
 use lib 't', '.';
 require 'lib.pl';
 
 # remove database from DSN
 $test_dsn =~ s/^DBI:mysql:([^:]+)(:?)/DBI:mysql:$2/;
+$test_dsn .= ";mysql_socket=$test_socket" if $test_socket;
 
 my $dbh;
 eval {$dbh= DBI->connect($test_dsn, $test_user, $test_password,
