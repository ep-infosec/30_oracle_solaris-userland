Source: Internal

Info: This patch makes the changes necessary to support wanboot.
Mostly it removes floating point support.

Status: This patch is Solaris specific.  This will not be sent upstream.

diff --git a/gl/printf-args.c b/gl/printf-args.c
index a781549..b134789 100644
--- a/gl/printf-args.c
+++ b/gl/printf-args.c
@@ -71,12 +71,14 @@ PRINTF_FETCHARGS (va_list args, arguments *a)
       case TYPE_ULONGLONGINT:
         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);
         break;
+#ifndef _BOOT
       case TYPE_DOUBLE:
         ap->a.a_double = va_arg (args, double);
         break;
       case TYPE_LONGDOUBLE:
         ap->a.a_longdouble = va_arg (args, long double);
         break;
+#endif /* !_BOOT */
       case TYPE_CHAR:
         ap->a.a_char = va_arg (args, int);
         break;
diff --git a/lib/priority.c b/lib/priority.c
index 0a284ae..773160d 100644
--- a/lib/priority.c
+++ b/lib/priority.c
@@ -1302,6 +1302,7 @@ static int cfg_ini_handler(void *_ctx, const char *section, const char *name, co
 
 static void _gnutls_update_system_priorities(void)
 {
+#ifdef HAVE_FMEMOPEN
 	int ret;
 	struct stat sb;
 	FILE *fp;
@@ -1343,6 +1344,7 @@ static void _gnutls_update_system_priorities(void)
 			  (unsigned long long)sb.st_mtime);
 
 	system_priority_last_mod = sb.st_mtime;
+#endif
 }
 
 void _gnutls_load_system_priorities(void)
diff --git a/lib/random.c b/lib/random.c
index 605fc8d..25a67a1 100644
--- a/lib/random.c
+++ b/lib/random.c
@@ -35,9 +35,18 @@
 extern gnutls_crypto_rnd_st _gnutls_fuzz_rnd_ops;
 #endif
 
+#ifndef _BOOT
 /* Per thread context of random generator, and a flag to indicate initialization */
 static _Thread_local void *gnutls_rnd_ctx;
 static _Thread_local unsigned rnd_initialized = 0;
+#else
+/*
+ * Multithreading is not required for wanboot support in grub2 on x86 platform.
+ * Do not use thread local storage to avoid _GLOBAL_OFFSET_TABLE_ symbol in random.o
+ */
+static void *gnutls_rnd_ctx;
+static unsigned rnd_initialized = 0;
+#endif
 
 struct rnd_ctx_list_st {
 	void *ctx;
diff --git a/src/gl/printf-args.c b/src/gl/printf-args.c
index 943b77c..3942f3e 100644
--- a/src/gl/printf-args.c
+++ b/src/gl/printf-args.c
@@ -71,12 +71,14 @@ PRINTF_FETCHARGS (va_list args, arguments *a)
       case TYPE_ULONGLONGINT:
         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);
         break;
+#ifndef _BOOT
       case TYPE_DOUBLE:
         ap->a.a_double = va_arg (args, double);
         break;
       case TYPE_LONGDOUBLE:
         ap->a.a_longdouble = va_arg (args, long double);
         break;
+#endif /* !_BOOT */
       case TYPE_CHAR:
         ap->a.a_char = va_arg (args, int);
         break;
diff --git a/src/gl/timespec.h b/src/gl/timespec.h
index 02684ce..ab9c2a4 100644
--- a/src/gl/timespec.h
+++ b/src/gl/timespec.h
@@ -116,12 +116,14 @@ struct timespec timespec_sub (struct timespec, struct timespec)
 struct timespec dtotimespec (double)
   _GL_ATTRIBUTE_CONST;
 
+#ifndef _BOOT
 /* Return an approximation to A, of type 'double'.  */
 _GL_TIMESPEC_INLINE double
 timespectod (struct timespec a)
 {
   return a.tv_sec + a.tv_nsec / 1e9;
 }
+#endif /* !_BOOT */
 
 struct timespec current_timespec (void);
 void gettime (struct timespec *) _GL_ARG_NONNULL ((1));
