Back out upstream changset cc647db as it causes color component swap
when vncviewer is run on SPARC and remote X rendered on x86.
Being tracked as https://github.com/TigerVNC/tigervnc/issues/1073.

--- tigervnc-1.10.1/vncviewer/PlatformPixelBuffer.cxx	2019-12-19 23:02:02.000000000 -0800
+++ tigervnc-1.10.1/vncviewer/PlatformPixelBuffer.cxx	2020-08-06 05:39:04.592173035 -0700
@@ -34,8 +34,13 @@
 static rfb::LogWriter vlog("PlatformPixelBuffer");
 
 PlatformPixelBuffer::PlatformPixelBuffer(int width, int height) :
-  FullFramePixelBuffer(rfb::PixelFormat(32, 24, false, true,
-                                        255, 255, 255, 16, 8, 0),
+  FullFramePixelBuffer(rfb::PixelFormat(32, 24,
+#if !defined(WIN32) && !defined(__APPLE__)
+                                        ImageByteOrder(fl_display) == MSBFirst,
+#else
+                                        false,
+#endif
+                                        true, 255, 255, 255, 16, 8, 0),
                        0, 0, NULL, 0),
   Surface(width, height)
 #if !defined(WIN32) && !defined(__APPLE__)
--- tigervnc-1.10.1/vncviewer/Surface_X11.cxx	2019-12-19 23:02:02.000000000 -0800
+++ tigervnc-1.10.1/vncviewer/Surface_X11.cxx	2020-08-06 05:38:07.887219465 -0700
@@ -109,7 +109,6 @@
 
 void Surface::alloc()
 {
-  XRenderPictFormat templ;
   XRenderPictFormat* format;
 
   // Might not be open at this point
@@ -118,37 +117,7 @@
   pixmap = XCreatePixmap(fl_display, XDefaultRootWindow(fl_display),
                          width(), height(), 32);
 
-  // Our code assumes a BGRA byte order, regardless of what the endian
-  // of the machine is or the native byte order of XImage, so make sure
-  // we find such a format
-  templ.type = PictTypeDirect;
-  templ.depth = 32;
-#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
-  templ.direct.alpha = 0;
-  templ.direct.red   = 8;
-  templ.direct.green = 16;
-  templ.direct.blue  = 24;
-#else
-  templ.direct.alpha = 24;
-  templ.direct.red   = 16;
-  templ.direct.green = 8;
-  templ.direct.blue  = 0;
-#endif
-  templ.direct.alphaMask = 0xff;
-  templ.direct.redMask = 0xff;
-  templ.direct.greenMask = 0xff;
-  templ.direct.blueMask = 0xff;
-
-  format = XRenderFindFormat(fl_display, PictFormatType | PictFormatDepth |
-                             PictFormatRed | PictFormatRedMask |
-                             PictFormatGreen | PictFormatGreenMask |
-                             PictFormatBlue | PictFormatBlueMask |
-                             PictFormatAlpha | PictFormatAlphaMask,
-                             &templ, 0);
-
-  if (!format)
-    throw rdr::Exception("XRenderFindFormat");
-
+  format = XRenderFindStandardFormat(fl_display, PictStandardARGB32);
   picture = XRenderCreatePicture(fl_display, pixmap, format, 0, NULL);
 
   visFormat = XRenderFindVisualFormat(fl_display, fl_visual->visual);
