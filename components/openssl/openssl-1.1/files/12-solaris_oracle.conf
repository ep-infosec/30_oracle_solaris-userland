#
# Targets specific to Solaris 11 builds.
#
# For the time being we are interested only in compiling with Oracle Developer
# Studio compiler and linking with Solaris link editor.
#
# We don't inherit from the solaris templates in 10-main.conf in order to have
# tight control of the setup - no unpleseant surprises if upstream changed the
# templates/targets.
#
# All the targets defined in this file have the "oracle" suffix.
#
# Currently we only inherit these templates:
#   - BASE_unix
#   - x86_elf_asm
#   - x86_64_asm
#   - sparcv9_asm
#

my %targets = (

    "solaris-common-oracle" => {
        inherit_from     => [ "BASE_unix" ],
	template 	 => 1,
	# We mark some of the ciphers/algorithms deprecated. Do not warn about
	# these during build. If any other deprecations turn up, it is
	# upstream's problem.
	CFLAGS 		 => "-Xa -erroff=E_DEPRECATED_ATT",
        cppflags         => add(threads("-D_REENTRANT")),
	lib_cppflags     => "-DFILIO_H",
        CC               => "cc",
        ex_libs          => add("-lsocket -lnsl -ldl -lc"),
        dso_scheme       => "dlfcn",
        perlasm_scheme   => "elf",
        thread_scheme    => "pthreads",
        shared_target    => "self",
        shared_extension => ".so.\$(SHLIB_VERSION_NUMBER)",
        shared_cflag     => "-KPIC",
        shared_ldflag    => add_before("-G -dy -z text -zdefs -Bdirect -zignore"),
        shared_sonameflag => "-h ",
    },

    #
    # templates
    #
    # TODO: use picker() with debug/release to supply -g and such
    #
    "solaris-x86-common-oracle" => {
	template 	 => 1,
        inherit_from     => [ "solaris-common-oracle" ],
	CFLAGS 		 => add("-xO3"),
        lib_cppflags     => add("-DL_ENDIAN"),
    },

    # For some reason -xstrconst is used for all except x86 in 32-bit mode
    # and -xspace is used for all except SPARC in 32-bit mode and x86 in 64-bit mode.
    "solaris-sparc-common-oracle" => {
	template => 1,
        inherit_from     => [ "solaris-common-oracle" ],
	CFLAGS 		 => add("-Qoption cg -xregs=no%appl -xO5 -xstrconst -xdepend"),
        lib_cppflags     => add("-DB_ENDIAN -DBN_DIV2W"),
    },

    # 32-bit
    "solaris32-oracle" => {
	template => 1,
        CFLAGS           => add_before("-m32"),
	lflags		 => add("-Wl,-rpath=/usr/openssl/1.1/lib")
    },
    # 64-bit
    "solaris64-oracle" => {
	template => 1,
        multilib         => "/64",
        CFLAGS           => add_before("-m64"),
	lflags		 => add("-Wl,-rpath=/usr/openssl/1.1/lib/64")
    },

    #
    # x86
    #
    "solaris-x86-cc-oracle" => {
        inherit_from     => [ "solaris-x86-common-oracle", "solaris32-oracle", asm("x86_elf_asm") ],
	CFLAGS 		 => add("-xspace"),
        #cflags           => add_before("-xarch=generic64 -xstrconst -Xa"),
        #bn_ops           => "SIXTY_FOUR_BIT_LONG",
    },
    "solaris64-x86_64-cc-oracle" => {
        inherit_from     => [ "solaris-x86-common-oracle", "solaris64-oracle", asm("x86_64_asm") ],
        cflags           => add_before("-m64 -xstrconst -Xa"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
    },

    #
    # SPARC
    #
    "solaris-sparcv7-cc-oracle" => {
        inherit_from     => [ "solaris-sparc-common-oracle", "solaris32-oracle", asm("sparcv9_asm") ],
	#
	# Disable all warnings from assembler. This is used to get rid of this warning:
	#
	#  v8+ ABI violation: illegal use of %i or %l register as rs1 in "brnz,a" instruction
	#
	# which appears when building T4-specific modules as 32-bit.
	# This has been confirmed as a valid usecase and is thus intentional.
	#
	CFLAGS => add("-Wa,-n"),
        # bn_ops           => "BN_LLONG RC4_CHAR",
    },
    "solaris64-sparcv9-cc-oracle" => {
	CFLAGS 		 => add("-xspace"),
        inherit_from     => [ "solaris-sparc-common-oracle", "solaris64-oracle", asm("sparcv9_asm") ],
        bn_ops           => "BN_LLONG RC4_CHAR",
    },
);
