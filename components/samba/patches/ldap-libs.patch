in-house
promoted into the community:
https://bugzilla.samba.org/show_bug.cgi?id=12124

This is a small configuration change to allow to choose which LDAP C-SDK will be used
by defining the alternate paths in ldap.pc and lber.pc (pkg-config) files.
note: in case of the API do not reside in standard paths the appropriate "SYSLIB target"
should be added into the deps= of the target to ensure the appropriate "-I<alt.path>" or
"-L<alt.path>" flags will be available when compile/link.

In case of no pkg-config info is found libldap.so and liblber.so libs are searched in
standard library path.

Motivation:
On Solaris 11 there are 2 LDAP APIs:

 - "legacy" DS 5 C-SDK represented by:
   /usr/include/ldap.h
   /usr/include/lber.h
   /usr/lib/libldap.so -> libldap.so.5
    ...mozldap has no lber lib. distinguished from ldap lib.

 - new OpenLDAP C-SDK represented by:
   /usr/include/openldap/ldap.h
   /usr/include/openldap/lber.h
   /usr/lib/libldap_r.so -> libldap_r.so.${cur.ver.}
   /usr/lib/liblber.so -> liblber.so.${cur.ver.}

...so the default one found by waf is the "wrong one".

 
diff --git a/source3/wscript b/source3/wscript
index 0f24f2d..74008a6 100644
--- a/source3/wscript
+++ b/source3/wscript
@@ -694,24 +694,32 @@ msg.msg_accrightslen = sizeof(fd);
 
     # Check for LDAP
     if Options.options.with_ldap:
-        conf.CHECK_HEADERS('ldap.h lber.h ldap_pvt.h')
-        conf.CHECK_TYPE('ber_tag_t', 'unsigned int', headers='ldap.h lber.h')
-        conf.CHECK_FUNCS_IN('ber_scanf ber_sockbuf_add_io', 'lber')
-        conf.CHECK_VARIABLE('LDAP_OPT_SOCKBUF', headers='ldap.h')
+        if conf.CHECK_CFG(package='ldap', args="--cflags --libs", msg='Check for ldap', uselib_store="LDAP") :
+            conf.SET_TARGET_TYPE('ldap', 'SYSLIB')
+        else :
+            conf.CHECK_LIB('ldap', shlib=True)
+        if conf.CHECK_CFG(package='lber', args="--cflags --libs", msg='Check for lber', uselib_store="LBER") :
+            conf.SET_TARGET_TYPE('lber', 'SYSLIB')
+        else :
+            conf.CHECK_LIB('lber', shlib=True)
+        conf.CHECK_HEADERS('ldap.h lber.h ldap_pvt.h', lib='ldap')
+        conf.CHECK_TYPE('ber_tag_t', 'unsigned int', headers='ldap.h lber.h', lib='ldap lber')
+        conf.CHECK_FUNCS('ber_scanf ber_sockbuf_add_io', lib='ldap lber')
+        conf.CHECK_VARIABLE('LDAP_OPT_SOCKBUF', headers='ldap.h', lib='ldap')
 
         # if we LBER_OPT_LOG_PRINT_FN we can intercept ldap logging and print it out
         # for the samba logs
         conf.CHECK_VARIABLE('LBER_OPT_LOG_PRINT_FN',
-                            define='HAVE_LBER_LOG_PRINT_FN', headers='lber.h')
+                            define='HAVE_LBER_LOG_PRINT_FN', headers='lber.h', lib='ldap lber')
 
-        conf.CHECK_FUNCS_IN('ldap_init ldap_init_fd ldap_initialize ldap_set_rebind_proc', 'ldap')
-        conf.CHECK_FUNCS_IN('ldap_add_result_entry', 'ldap')
+        conf.CHECK_FUNCS('ldap_init ldap_init_fd ldap_initialize ldap_set_rebind_proc', lib='ldap')
+        conf.CHECK_FUNCS('ldap_add_result_entry', lib='ldap')
 
         # Check if ldap_set_rebind_proc() takes three arguments
         if conf.CHECK_CODE('ldap_set_rebind_proc(0, 0, 0)',
                            'LDAP_SET_REBIND_PROC_ARGS',
                            msg="Checking whether ldap_set_rebind_proc takes 3 arguments",
-                           headers='ldap.h lber.h', link=False):
+                           headers='ldap.h lber.h', link=False, lib='ldap'):
             conf.DEFINE('LDAP_SET_REBIND_PROC_ARGS', '3')
         else:
             conf.DEFINE('LDAP_SET_REBIND_PROC_ARGS', '2')
diff --git a/source3/wscript_build b/source3/wscript_build
index 5a07edd..1831878 100644
--- a/source3/wscript_build
+++ b/source3/wscript_build
@@ -39,6 +39,8 @@ bld.SAMBA3_LIBRARY('netapi',
                     LIBCLI_SAMR
                     INIT_SAMR
                     auth
+                    ldap
+                    lber
                     ''',
                     public_headers='../source3/lib/netapi/netapi.h',
                     pc_files='libnet/netapi.pc',
@@ -542,7 +544,7 @@ bld.SAMBA3_SUBSYSTEM('LIBADS_SERVER',
 
 bld.SAMBA3_SUBSYSTEM('LIBADS_PRINTER',
                     source='libads/ldap_printer.c',
-                    deps='samba-util krb5samba')
+                    deps='samba-util krb5samba ldap lber')
 
 # Only smbconf should link against this subsystem, else we will create
 # a circular dependency.
diff --git a/source3/librpc/wscript_build b/source3/librpc/wscript_build
index c1fa54c..a1821aa 100644
--- a/source3/librpc/wscript_build
+++ b/source3/librpc/wscript_build
@@ -9,7 +9,7 @@ bld.SAMBA3_SUBSYSTEM('NDR_LIBNETAPI',
 
 bld.SAMBA3_SUBSYSTEM('NDR_LIBNET_JOIN',
 	source='gen_ndr/ndr_libnet_join.c',
-	public_deps='ndr krb5samba'
+	public_deps='ndr krb5samba ldap lber'
 	)
 
 bld.SAMBA3_SUBSYSTEM('NDR_OPEN_FILES',
diff --git a/source3/winbindd/wscript_build b/source3/winbindd/wscript_build
index c3f782c..923767d 100644
--- a/source3/winbindd/wscript_build
+++ b/source3/winbindd/wscript_build
@@ -16,7 +16,7 @@ bld.SAMBA3_SUBSYSTEM('IDMAP_TDB_COMMON',
 
 bld.SAMBA3_SUBSYSTEM('IDMAP_HASH',
                     source='idmap_hash/idmap_hash.c idmap_hash/mapfile.c',
-                    deps='samba-util krb5samba',
+                    deps='samba-util krb5samba ldap lber',
                     enabled=bld.SAMBA3_IS_ENABLED_MODULE('idmap_hash'))
 
 bld.SAMBA3_SUBSYSTEM('IDMAP_AD',
@@ -38,7 +38,7 @@ bld.SAMBA3_MODULE('idmap_rfc2307',
                  allow_undefined_symbols=True,
                  source='idmap_rfc2307.c',
                  init_function='',
-                 deps='ads',
+                 deps='ads ldap lber',
                  internal_module=bld.SAMBA3_IS_STATIC_MODULE('idmap_rfc2307'),
                  enabled=bld.SAMBA3_IS_ENABLED_MODULE('idmap_rfc2307'))
 
@@ -122,7 +122,7 @@ bld.SAMBA3_LIBRARY('nss_info',
 bld.SAMBA3_MODULE('nss_info_template',
                  subsystem='nss_info',
                  source='nss_info_template.c',
-                 deps='samba-util krb5samba',
+                 deps='samba-util krb5samba ldap lber',
                  init_function='',
                  internal_module=bld.SAMBA3_IS_STATIC_MODULE('nss_info_template'),
                  enabled=bld.SAMBA3_IS_ENABLED_MODULE('nss_info_template'))
