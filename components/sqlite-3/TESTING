================================================================================
Test on a test machine:

# Make sure that you are working with the correct sqlite version
sqlite3 --version

# Make sure that the smf data can be read
sqlite3 /etc/svc/repository.db 'select * from service_tbl;'

# Make sure that the machine can reboot with the new sqlite installed
reboot

================================================================================
Test bootable iso creation. We download the IPS repo, substitute the contained
sqlite-3 for our version of sqlite-3 and modify userland-incorporation so that
it refers our version of sqlite-3. After that create bootable iso from the
modified IPS repo and test installing Solaris from it.

# download zipped repo (choose desired $BUILD) and install-repo.ksh
# http://nana.us.oracle.com/products/Solaris_Trunk/st_trunk/${BUILD}/zipped-repo/

# I perform whole action in zfs so that I can rollback easily
zfs create scratch/repo
ksh ./install-repo.ksh -d repo
zfs snapshot scratch/repo@after_unpack

# Remove old sqlite
PKG=database/sqlite-3
# This is where the manifest will be found in the raw repository
PKG_PATH="${PKG//\//%2F}"
OLDVER=$( pkg list -Haf -g repo "$PKG" | sed "s/(.*)//" | awk '{ print $2 }' )
pkgrepo remove -s repo "$PKG"

# Copy sqlite to the repo
pkgrepo create raw-repo
# Make sure that you don't have multiple sqlite-3 packages in your repo
# otherwise distro_const might fail later
pkgrecv -d raw-repo --raw -s userland-gate/$(uname -p)/repo "$PKG"
# changing publisher nightly -> solaris
perl -pi -e "s,nightly/(\\Q${PKG}\\E),solaris/\$1," "raw-repo/$PKG_PATH"/*/manifest
pkgrepo create fix
pkgsend -s fix publish $( printf -- '-d %s ' raw-repo/*/* ) "raw-repo/$PKG_PATH"/*/manifest
pkg list -af -g fix
pkgrecv -v -d repo -s fix "$PKG"
rm -rf fix raw-repo
NEWVER=$( pkg list -Haf -g repo "$PKG" | sed "s/(.*)//" | awk '{ print $2 }' )

# Teach userland-incorporation about our new sqlite version. This is needed
# only if we have built sqlite version different to what the repo contained
# originally
CONS=consolidation/userland/userland-incorporation
CONS_PATH="${CONS//\//%2F}"
pkgrepo create raw-repo
pkgrecv -d raw-repo --raw -s repo "$CONS"
pkgrepo remove -s repo "$CONS"
# change database/sqlite-3@3.17.0-11.4.0.0.0.10.0 to database/sqlite-3@3.21.0-11.4.0.0.0.10.0
perl -pi -e "s,=\\Q${PKG}\\E@\\Q${OLDVER}\\E,=${PKG}\\@${NEWVER},g" "raw-repo/$CONS_PATH"/*/manifest
pkgrepo create fix
pkgsend -s fix publish $( printf -- '-d %s ' raw-repo/*/* ) "raw-repo/$CONS_PATH"/*/manifest
pkg list -af -g fix
pkgrecv -v -d repo -s fix "$CONS"
rm -rf fix raw-repo

# Now create the iso definition file
[[ "`uname -p`" = "sparc" ]] && PLATFORM="sparc" || PLATFORM="x86"
cp /usr/share/distro_const/dc_text_${PLATFORM}.xml iso.xml
vi iso.xml

# change both occurrences of http://pkg.oracle.com/solaris/release to file:///scratch/repo
gsed -i 's$http://pkg.oracle.com/solaris/release$file:///scratch/repo$' iso.xml

# <software name="transfer-ips-install" type="IPS">
#   <source>
#     <publisher name="solaris">
#       <origin name="CHANGE_THIS"/>
#
# <software name="set-ips-attributes" type="IPS">
#   <source>
#     <publisher name="solaris">
#       <origin name="CHANGE_THIS"/>

# The machine needs uucp installed otherwise building iso fails
sudo pkg install -v service/network/uucp
sudo distro_const build iso.xml

# Now install machine from the iso (see instructions bellow) and verify that
# we are looking at correct sqlite version
$ pkg list database/sqlite-3
NAME (PUBLISHER)                                  VERSION                    IFO
database/sqlite-3                                 3.21.0-11.4.0.0.0.10.0     i--

$ sqlite3 --version
3.21.0 2017-10-24 18:55:49 1a584e499906b5c87ec7d43d4abce641fdf017c42125b083109bc77c4de4alt2

$ svcs -x
<no output>

================================================================================
# iso image installation on our virtual machines

## Intel ##
# create new virtual machine
/tank/vm/admin/bin/vm.create_new ${VM_MACHINE_NAME} Solaris_64 ${PATH_TO_IMAGE}/Oracle_Solaris_Text_X86.iso
vm start $VM_MACHINE_NAME
# connect with rdesktop, then follow installation instructions

## SPARC ##
# create new virtual machine
/tank/vm/admin/bin/sparc/vm.create_new ${VM_MACHINE_NAME} ${PATH_TO_IMAGE}/Oracle_Solaris_Text_SPARC.iso
# machine must be started with the -ok argument
vm start -ok $VM_MACHINE_NAME
# connect to the console
vm console $VM_MACHINE_NAME
# start boot with following command, then follow installation instructions
boot cdrom
