Compression library libzstd is not currently
available in Solaris. Skip tests that require
it to avoid failures.

Not suitable for upstream.

--- cmake-3.24.0/Tests/CTestCoverageCollectGCOV/test.cmake.in
+++ cmake-3.24.0/Tests/CTestCoverageCollectGCOV/test.cmake.in
@@ -165,34 +165,3 @@ message("PASSED with correct output: ${o
 else()
   message(FATAL_ERROR "FAILED: expected:\n${expected_out}\nGot:\n${out}")
 endif()
-
-#------------------------------------------------------------------------------#
-# Test 5: with optional argument: TARBALL_COMPRESSION "ZSTD"
-#------------------------------------------------------------------------------#
-
-set(tar_file ${CTEST_BINARY_DIRECTORY}/gcov.zstd)
-ctest_coverage_collect_gcov(
-  TARBALL "${tar_file}"
-  TARBALL_COMPRESSION "ZSTD"
-  SOURCE "${CTEST_SOURCE_DIRECTORY}"
-  BUILD "${CTEST_BINARY_DIRECTORY}"
-  GCOV_COMMAND "${CMAKE_COMMAND}"
-  GCOV_OPTIONS -P "@CMake_SOURCE_DIR@/Tests/CTestCoverageCollectGCOV/fakegcov.cmake")
-file(REMOVE_RECURSE "${CTEST_BINARY_DIRECTORY}/uncovered")
-
-execute_process(COMMAND
-  ${CMAKE_COMMAND} -E tar tf ${tar_file}
-  OUTPUT_VARIABLE out
-  WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
-string(REPLACE "\n" ";" out "${out}")
-to_relative_paths(out "${out}")
-list(SORT out)
-
-if("${out}" STREQUAL "${expected_out}")
-  message("PASSED with correct output: ${out}")
-else()
-  message(FATAL_ERROR "FAILED: expected:\n${expected_out}\nGot:\n${out}")
-endif()
--- cmake-3.24.0/Tests/RunCMake/CommandLineTar/RunCMakeTest.cmake
+++ cmake-3.24.0/Tests/RunCMake/CommandLineTar/RunCMakeTest.cmake
@@ -27,7 +27,6 @@ run_cmake(gnutar)
 run_cmake(gnutar-gz)
 run_cmake(pax)
 run_cmake(pax-xz)
-run_cmake(pax-zstd)
 run_cmake(paxr)
 run_cmake(paxr-bz2)
 run_cmake(zip)
--- cmake-3.24.0/Tests/RunCMake/File_Archive/RunCMakeTest.cmake
+++ cmake-3.24.0/Tests/RunCMake/File_Archive/RunCMakeTest.cmake
@@ -5,7 +5,6 @@ run_cmake(gnutar)
 run_cmake(gnutar-gz)
 run_cmake(pax)
 run_cmake(pax-xz)
-run_cmake(pax-zstd)
 run_cmake(paxr)
 run_cmake(paxr-bz2)
 run_cmake(zip)
@@ -22,5 +21,4 @@ run_cmake(argument-validation-compressio
 run_cmake(argument-validation-compression-level-2)
 run_cmake(gnutar-gz-compression-level)
 run_cmake(pax-xz-compression-level)
-run_cmake(pax-zstd-compression-level)
 run_cmake(paxr-bz2-compression-level)
