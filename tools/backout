#!/bin/bash
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
#

# This creates a commit backing out a given changeset. That means that
#  - it applies reverse diff to given changeset
#  - it creates correct commit message

# But you still must
#  - make sure that you are backing out the changeset in the same build it was
#    introduced
#  - push the change to the gate
#  - set the bugs to state 25 (or 11)

set -eEu -o pipefail
export PATH=/usr/bin
export HGPLAIN=+strictflags # see 'hg help scripting'

function usage {
	echo "backout <changeset_id> <reason>"
}

if [ $# -ne 2 ]; then
	usage
	exit 1
fi

REV="$1"
REASON="$2"

STATUS=$(hg st -mard)
if [[ -n $STATUS ]]; then
	echo "The workspace has uncommitted changes, please fix that first."
	echo -E "$STATUS"
	exit 1
fi

NUMBER_OF_CHANGESETS=$( hg log --rev "$REV" --template '1\n' | grep -c 1 )
# No need to check for invalid revision, the previous command fails in that
# case
if [ $NUMBER_OF_CHANGESETS -ne 1 ]; then
	echo "The revision '$REV' corresponds to multiple changesets."
	echo "Please limit the change to single changeset only."
	exit 1
fi

BUGS=$( hg log --rev "$REV" --template '{desc}\n' | ( ggrep -E -o '^[0-9]{8} ' || : ) )

if [ -z "$BUGS" ]; then
	echo "The revision '$REV' does not seem to have any bug numbers in it's commit message:"
	hg log -v --rev "$REV"
	exit 1
fi

COMMIT_MESSAGE="backout $(echo $BUGS | sed -e 's, ,/,g') - $REASON"

hg diff --reverse -c "$REV" | hg import --message "$COMMIT_MESSAGE" -

echo "Backout changeset created:"
hg log -l 1
